{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3","program":"/home/titus/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","rusttype","/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=858f9996688d45c0","-C","extra-filename=-858f9996688d45c0","--out-dir","/home/titus/writing/school-related/gymnasie-arbete/program/target/rls/debug/deps","-L","dependency=/home/titus/writing/school-related/gymnasie-arbete/program/target/rls/debug/deps","--extern","arrayvec=/home/titus/writing/school-related/gymnasie-arbete/program/target/rls/debug/deps/libarrayvec-4cdc09c945c60bc9.rmeta","--extern","ordered_float=/home/titus/writing/school-related/gymnasie-arbete/program/target/rls/debug/deps/libordered_float-9152ffe89ee5359f.rmeta","--extern","stb_truetype=/home/titus/writing/school-related/gymnasie-arbete/program/target/rls/debug/deps/libstb_truetype-38dbf75c750c3a37.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/titus/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/titus/writing/school-related/gymnasie-arbete/program/target/rls/debug/deps/librusttype-858f9996688d45c0.rmeta"},"prelude":{"crate_id":{"name":"rusttype","disambiguator":[9735675206997398120,13697291647928244130]},"crate_root":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src","external_crates":[{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14071373652398347879,7103549041170480253]}},{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5273437404553270099,5411348343046199890]}},{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[976218546544352998,2134245565175613459]}},{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13100362557277821204,18082047403827332368]}},{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3605767859335716447,18368004652892255649]}},{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7644919710974821109,7113146966867899407]}},{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16182386318199163571,1953714320961812]}},{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12664401352052491985,6928826529401171483]}},{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[17274879524252775070,15165904048009513825]}},{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3349673540409454496,14630436784565510244]}},{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[14546748579478228105,1074460191194833292]}},{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5671097699487010686,7534711367382902334]}},{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7229860330014108182,6606161976056509340]}},{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7609715969379266585,5596137465280250730]}},{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","num":15,"id":{"name":"arrayvec","disambiguator":[17719491097937997923,3098798004806085026]}},{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","num":16,"id":{"name":"nodrop","disambiguator":[17780674029662989805,6601359369679622832]}},{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","num":17,"id":{"name":"stb_truetype","disambiguator":[18197279421259236076,4280440715132347201]}},{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","num":18,"id":{"name":"stb_truetype","disambiguator":[4209555809533266480,12585137067627502756]}},{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","num":19,"id":{"name":"byteorder","disambiguator":[11313478889500985618,15806133796731293058]}},{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","num":20,"id":{"name":"ordered_float","disambiguator":[3739088123438240191,217755035411884024]}},{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","num":21,"id":{"name":"num_traits","disambiguator":[7962435709619242706,16673362617458902953]}},{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","num":22,"id":{"name":"num_traits","disambiguator":[16866547483548684839,17863212872421350139]}},{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","num":23,"id":{"name":"unreachable","disambiguator":[8111072976940461994,16285435763699424474]}},{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","num":24,"id":{"name":"void","disambiguator":[2128928307612095014,6396971563860833580]}}],"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":0,"byte_end":34773,"line_start":1,"line_end":834,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":399},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":5272,"byte_end":5276,"line_start":103,"line_end":103,"column_start":20,"column_end":24},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":279},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":5278,"byte_end":5283,"line_start":103,"line_end":103,"column_start":26,"column_end":31},"alias_span":null,"name":"Point","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":5285,"byte_end":5290,"line_start":103,"line_end":103,"column_start":33,"column_end":38},"alias_span":null,"name":"point","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":320},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":5292,"byte_end":5298,"line_start":103,"line_end":103,"column_start":40,"column_end":46},"alias_span":null,"name":"Vector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":5300,"byte_end":5306,"line_start":103,"line_end":103,"column_start":48,"column_end":54},"alias_span":null,"name":"vector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":361},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":5308,"byte_end":5312,"line_start":103,"line_end":103,"column_start":56,"column_end":60},"alias_span":null,"name":"Line","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":380},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":5314,"byte_end":5319,"line_start":103,"line_end":103,"column_start":62,"column_end":67},"alias_span":null,"name":"Curve","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":0,"byte_end":34773,"line_start":1,"line_end":834,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":90},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":152},{"krate":0,"index":474},{"krate":0,"index":481},{"krate":0,"index":478},{"krate":0,"index":484},{"krate":0,"index":487},{"krate":0,"index":490},{"krate":0,"index":501},{"krate":0,"index":498},{"krate":0,"index":153},{"krate":0,"index":157},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":504},{"krate":0,"index":529},{"krate":0,"index":527},{"krate":0,"index":525},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":515},{"krate":0,"index":509},{"krate":0,"index":507},{"krate":0,"index":530},{"krate":0,"index":559},{"krate":0,"index":557},{"krate":0,"index":555},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":545},{"krate":0,"index":539},{"krate":0,"index":537},{"krate":0,"index":560},{"krate":0,"index":585},{"krate":0,"index":583},{"krate":0,"index":581},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":571},{"krate":0,"index":565},{"krate":0,"index":563},{"krate":0,"index":586},{"krate":0,"index":589},{"krate":0,"index":592},{"krate":0,"index":601},{"krate":0,"index":604},{"krate":0,"index":610},{"krate":0,"index":612},{"krate":0,"index":633},{"krate":0,"index":631},{"krate":0,"index":629},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":615},{"krate":0,"index":634},{"krate":0,"index":660},{"krate":0,"index":658},{"krate":0,"index":656},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":638},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":661},{"krate":0,"index":666},{"krate":0,"index":669},{"krate":0,"index":674},{"krate":0,"index":677},{"krate":0,"index":698},{"krate":0,"index":696},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":682},{"krate":0,"index":680},{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":193},{"krate":0,"index":197},{"krate":0,"index":202},{"krate":0,"index":699},{"krate":0,"index":704},{"krate":0,"index":219},{"krate":0,"index":708},{"krate":0,"index":717},{"krate":0,"index":225},{"krate":0,"index":231},{"krate":0,"index":721},{"krate":0,"index":732},{"krate":0,"index":730},{"krate":0,"index":728},{"krate":0,"index":733},{"krate":0,"index":737},{"krate":0,"index":735},{"krate":0,"index":240},{"krate":0,"index":260}],"decl_id":null,"docs":" RustType is a pure Rust alternative to libraries like FreeType.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":279},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":35466,"byte_end":35471,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"name":"Point","qualname":"::geometry::Point","value":"Point { x, y }","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282}],"decl_id":null,"docs":" A point in 2-dimensional space, with each dimension of type `N`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":281},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":35485,"byte_end":35486,"line_start":18,"line_end":18,"column_start":9,"column_end":10},"name":"x","qualname":"::geometry::Point::x","value":"N","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":282},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":35499,"byte_end":35500,"line_start":19,"line_end":19,"column_start":9,"column_end":10},"name":"y","qualname":"::geometry::Point::y","value":"N","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":320},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":35818,"byte_end":35824,"line_start":27,"line_end":27,"column_start":12,"column_end":18},"name":"Vector","qualname":"::geometry::Vector","value":"Vector { x, y }","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":323}],"decl_id":null,"docs":" A vector in 2-dimensional space, with each dimension of type `N`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":322},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":35838,"byte_end":35839,"line_start":28,"line_end":28,"column_start":9,"column_end":10},"name":"x","qualname":"::geometry::Vector::x","value":"N","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":323},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":35852,"byte_end":35853,"line_start":29,"line_end":29,"column_start":9,"column_end":10},"name":"y","qualname":"::geometry::Vector::y","value":"N","parent":{"krate":0,"index":320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":35918,"byte_end":35923,"line_start":32,"line_end":32,"column_start":8,"column_end":13},"name":"point","qualname":"::geometry::point","value":"fn <N> (x: N, y: N) -> Point<N>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for generating `Point`s.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":10},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":36040,"byte_end":36046,"line_start":36,"line_end":36,"column_start":8,"column_end":14},"name":"vector","qualname":"::geometry::vector","value":"fn <N> (x: N, y: N) -> Vector<N>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for generating `Vector`s.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":361},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":38706,"byte_end":38710,"line_start":140,"line_end":140,"column_start":12,"column_end":16},"name":"Line","qualname":"::geometry::Line","value":"Line { p }","parent":null,"children":[{"krate":0,"index":362}],"decl_id":null,"docs":" A straight line between two points, `p[0]` and `p[1]`\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":362},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":38721,"byte_end":38722,"line_start":141,"line_end":141,"column_start":9,"column_end":10},"name":"p","qualname":"::geometry::Line::p","value":"[geometry::Point<f32>; _]","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":380},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":38901,"byte_end":38906,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"Curve","qualname":"::geometry::Curve","value":"Curve { p }","parent":null,"children":[{"krate":0,"index":381}],"decl_id":null,"docs":" A quadratic Bezier curve, starting at `p[0]`, ending at `p[2]`, with control point `p[1]`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":381},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":38917,"byte_end":38918,"line_start":146,"line_end":146,"column_start":9,"column_end":10},"name":"p","qualname":"::geometry::Curve::p","value":"[geometry::Point<f32>; _]","parent":{"krate":0,"index":380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":399},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":39099,"byte_end":39103,"line_start":150,"line_end":150,"column_start":12,"column_end":16},"name":"Rect","qualname":"::geometry::Rect","value":"Rect { min, max }","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402}],"decl_id":null,"docs":" A rectangle, with top-left corner at `min`, and bottom-right corner at `max`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":401},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":39117,"byte_end":39120,"line_start":151,"line_end":151,"column_start":9,"column_end":12},"name":"min","qualname":"::geometry::Rect::min","value":"geometry::Point<N>","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":402},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":39140,"byte_end":39143,"line_start":152,"line_end":152,"column_start":9,"column_end":12},"name":"max","qualname":"::geometry::Rect::max","value":"geometry::Point<N>","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":39212,"byte_end":39217,"line_start":155,"line_end":155,"column_start":12,"column_end":17},"name":"width","qualname":"<Rect<N>>::width","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":39281,"byte_end":39287,"line_start":158,"line_end":158,"column_start":12,"column_end":18},"name":"height","qualname":"<Rect<N>>::height","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":95},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/rasterizer.rs","byte_start":44592,"byte_end":44600,"line_start":6,"line_end":6,"column_start":10,"column_end":18},"name":"PerSlice","qualname":"::rasterizer::SliceUp::PerSlice","value":"type PerSlice: Iterator<Item=Self>;","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":96},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/rasterizer.rs","byte_start":44632,"byte_end":44635,"line_start":7,"line_end":7,"column_start":10,"column_end":13},"name":"Out","qualname":"::rasterizer::SliceUp::Out","value":"type Out: Iterator<Item=Self::PerSlice>;","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":474},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":5545,"byte_end":5559,"line_start":109,"line_end":109,"column_start":12,"column_end":26},"name":"FontCollection","qualname":"::FontCollection","value":"","parent":null,"children":[],"decl_id":null,"docs":" A collection of fonts read straight from a font file's data. The data in the collection is not validated.\n This structure may or may not own the font data.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":484},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":5668,"byte_end":5672,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"Font","qualname":"::Font","value":"Font {  }","parent":null,"children":[{"krate":0,"index":486}],"decl_id":null,"docs":" A single font. This may or may not own the font data.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":492},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":6057,"byte_end":6062,"line_start":121,"line_end":121,"column_start":5,"column_end":10},"name":"ByRef","qualname":"::SharedBytes::ByRef","value":"SharedBytes::ByRef(&'a [u8])","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":495},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":6078,"byte_end":6083,"line_start":122,"line_end":122,"column_start":5,"column_end":10},"name":"ByArc","qualname":"::SharedBytes::ByArc","value":"SharedBytes::ByArc(Arc<[u8]>)","parent":{"krate":0,"index":490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":490},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":6035,"byte_end":6046,"line_start":120,"line_end":120,"column_start":10,"column_end":21},"name":"SharedBytes","qualname":"::SharedBytes","value":"SharedBytes::{ByRef, ByArc}","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":495}],"decl_id":null,"docs":" `SharedBytes` handles the lifetime of font data used in RustType. The data is either a shared\n reference to externally owned data, or managed by reference counting. `SharedBytes` can be\n conveniently used with `From` and `Into`, and dereferences to the contained bytes.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":504},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":7048,"byte_end":7057,"line_start":157,"line_end":157,"column_start":12,"column_end":21},"name":"Codepoint","qualname":"::Codepoint","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a Unicode code point.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":531},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":7438,"byte_end":7447,"line_start":165,"line_end":165,"column_start":5,"column_end":14},"name":"Codepoint","qualname":"::CodepointOrGlyphId::Codepoint","value":"CodepointOrGlyphId::Codepoint(Codepoint)","parent":{"krate":0,"index":530},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":534},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":7464,"byte_end":7471,"line_start":166,"line_end":166,"column_start":5,"column_end":12},"name":"GlyphId","qualname":"::CodepointOrGlyphId::GlyphId","value":"CodepointOrGlyphId::GlyphId(GlyphId)","parent":{"krate":0,"index":530},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":530},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":7413,"byte_end":7431,"line_start":164,"line_end":164,"column_start":10,"column_end":28},"name":"CodepointOrGlyphId","qualname":"::CodepointOrGlyphId","value":"CodepointOrGlyphId::{Codepoint, GlyphId}","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":534}],"decl_id":null,"docs":" Represents either a Unicode code point, or a glyph identifier for a font.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":560},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":7748,"byte_end":7755,"line_start":171,"line_end":171,"column_start":12,"column_end":19},"name":"GlyphId","qualname":"::GlyphId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a glyph identifier for a particular font. This identifier will not necessarily correspond to\n the correct glyph in a font other than the one that it was obtained from.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":586},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":8162,"byte_end":8167,"line_start":178,"line_end":178,"column_start":12,"column_end":17},"name":"Glyph","qualname":"::Glyph","value":"Glyph {  }","parent":null,"children":[{"krate":0,"index":588}],"decl_id":null,"docs":" A single glyph of a font. this may either be a thin wrapper referring to the font and the glyph id, or\n it may be a standalone glyph that owns the data needed by it.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":604},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":8332,"byte_end":8347,"line_start":189,"line_end":189,"column_start":12,"column_end":27},"name":"SharedGlyphData","qualname":"::SharedGlyphData","value":"SharedGlyphData { id, extents, scale_for_1_pixel, unit_h_metrics, shape }","parent":null,"children":[{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":605},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":8358,"byte_end":8360,"line_start":190,"line_end":190,"column_start":9,"column_end":11},"name":"id","qualname":"::SharedGlyphData::id","value":"u32","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":606},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":8375,"byte_end":8382,"line_start":191,"line_end":191,"column_start":9,"column_end":16},"name":"extents","qualname":"::SharedGlyphData::extents","value":"std::option::Option<geometry::Rect<i32>>","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":607},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":8411,"byte_end":8428,"line_start":192,"line_end":192,"column_start":9,"column_end":26},"name":"scale_for_1_pixel","qualname":"::SharedGlyphData::scale_for_1_pixel","value":"f32","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":608},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":8443,"byte_end":8457,"line_start":193,"line_end":193,"column_start":9,"column_end":23},"name":"unit_h_metrics","qualname":"::SharedGlyphData::unit_h_metrics","value":"HMetrics","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":609},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":8477,"byte_end":8482,"line_start":194,"line_end":194,"column_start":9,"column_end":14},"name":"shape","qualname":"::SharedGlyphData::shape","value":"std::option::Option<std::vec::Vec<stb_truetype::Vertex>>","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":612},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":8756,"byte_end":8764,"line_start":199,"line_end":199,"column_start":12,"column_end":20},"name":"HMetrics","qualname":"::HMetrics","value":"HMetrics { advance_width, left_side_bearing }","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614}],"decl_id":null,"docs":" The \"horizontal metrics\" of a glyph. This is useful for calculating the horizontal offset of a glyph\n from the previous one in a string when laying a string out horizontally.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":613},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":8880,"byte_end":8893,"line_start":201,"line_end":201,"column_start":9,"column_end":22},"name":"advance_width","qualname":"::HMetrics::advance_width","value":"f32","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" The horizontal offset that the origin of the next glyph should be from the origin of this glyph.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":614},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":9013,"byte_end":9030,"line_start":203,"line_end":203,"column_start":9,"column_end":26},"name":"left_side_bearing","qualname":"::HMetrics::left_side_bearing","value":"f32","parent":{"krate":0,"index":612},"children":[],"decl_id":null,"docs":" The horizontal offset between the origin of this glyph and the leftmost edge/point of the glyph.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":634},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":9314,"byte_end":9322,"line_start":208,"line_end":208,"column_start":12,"column_end":20},"name":"VMetrics","qualname":"::VMetrics","value":"VMetrics { ascent, descent, line_gap }","parent":null,"children":[{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637}],"decl_id":null,"docs":" The \"vertical metrics\" of a font at a particular scale. This is useful for calculating the amount of\n vertical space to give a line of text, and for computing the vertical offset between successive lines.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":635},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":9437,"byte_end":9443,"line_start":210,"line_end":210,"column_start":9,"column_end":15},"name":"ascent","qualname":"::VMetrics::ascent","value":"f32","parent":{"krate":0,"index":634},"children":[],"decl_id":null,"docs":" The highest point that any glyph in the font extends to above the baseline. Typically positive.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":636},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":9561,"byte_end":9568,"line_start":212,"line_end":212,"column_start":9,"column_end":16},"name":"descent","qualname":"::VMetrics::descent","value":"f32","parent":{"krate":0,"index":634},"children":[],"decl_id":null,"docs":" The lowest point that any glyph in the font extends to below the baseline. Typically negative.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":637},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":9742,"byte_end":9750,"line_start":215,"line_end":215,"column_start":9,"column_end":17},"name":"line_gap","qualname":"::VMetrics::line_gap","value":"f32","parent":{"krate":0,"index":634},"children":[],"decl_id":null,"docs":" The gap to leave between the descent of one line and the ascent of the next. This is of\n course only a guideline given by the font's designers.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":661},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":10419,"byte_end":10430,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"ScaledGlyph","qualname":"::ScaledGlyph","value":"ScaledGlyph {  }","parent":null,"children":[{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665}],"decl_id":null,"docs":" A glyph augmented with scaling information. You can query such a glyph for information that depends\n on the scale of the glyph.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":669},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":10694,"byte_end":10709,"line_start":251,"line_end":251,"column_start":12,"column_end":27},"name":"PositionedGlyph","qualname":"::PositionedGlyph","value":"PositionedGlyph {  }","parent":null,"children":[{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673}],"decl_id":null,"docs":" A glyph augmented with positioning and scaling information. You can query such a glyph for information\n that depends on the scale and position of the glyph.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":677},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":11266,"byte_end":11271,"line_start":261,"line_end":261,"column_start":12,"column_end":17},"name":"Scale","qualname":"::Scale","value":"Scale { x, y }","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":679}],"decl_id":null,"docs":" Defines the size of a rendered face of a font, in pixels, horizontally and vertically. A vertical\n scale of `y` pixels means that the distance betwen the ascent and descent lines (see `VMetrics`) of the\n face will be `y` pixels. If `x` and `y` are equal the scaling is uniform. Non-uniform scaling by a factor\n *f* in the horizontal direction is achieved by setting `x` equal to *f* times `y`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":678},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":11319,"byte_end":11320,"line_start":263,"line_end":263,"column_start":9,"column_end":10},"name":"x","qualname":"::Scale::x","value":"f32","parent":{"krate":0,"index":677},"children":[],"decl_id":null,"docs":" Horizontal scale, in pixels.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":679},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":11370,"byte_end":11371,"line_start":265,"line_end":265,"column_start":9,"column_end":10},"name":"y","qualname":"::Scale::y","value":"f32","parent":{"krate":0,"index":677},"children":[],"decl_id":null,"docs":" Vertical scale, in pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":11467,"byte_end":11474,"line_start":270,"line_end":270,"column_start":12,"column_end":19},"name":"uniform","qualname":"<Scale>::uniform","value":"fn (s: f32) -> Scale","parent":null,"children":[],"decl_id":null,"docs":" Uniform scaling, equivalent to `Scale { x: s, y: s }`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":12359,"byte_end":12369,"line_start":298,"line_end":298,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<FontCollection>::from_bytes","value":"fn <B> (bytes: B) -> FontCollection<'a>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a font collection from an array of bytes, typically loaded from a font file.\n This array may be owned (e.g. `Vec<u8>`), or borrowed (`&[u8]`).\n As long as `From<T>` is implemented for `Bytes` for some type `T`, `T` can be used as input.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":12756,"byte_end":12765,"line_start":304,"line_end":304,"column_start":12,"column_end":21},"name":"into_font","qualname":"<FontCollection>::into_font","value":"fn (self) -> Option<Font<'a>>","parent":null,"children":[],"decl_id":null,"docs":" In the common case that a font collection consists of only one font, this function\n consumes this font collection and turns it into a font. If this is not the case,\n or the font is not valid (read: not supported by this library), `None` is returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":13678,"byte_end":13685,"line_start":322,"line_end":322,"column_start":12,"column_end":19},"name":"font_at","qualname":"<FontCollection>::font_at","value":"fn (&self, i: usize) -> Option<Font<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Gets the font at index `i` in the font collection, if it exists and is valid.\n The produced font borrows the font data that is either borrowed or owned by this font collection.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":14016,"byte_end":14026,"line_start":328,"line_end":328,"column_start":12,"column_end":22},"name":"into_fonts","qualname":"<FontCollection>::into_fonts","value":"fn (self) -> IntoFontsIter<'a>","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into an `Iterator` yielding each `Font` that exists within the collection.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":193},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":14166,"byte_end":14179,"line_start":335,"line_end":335,"column_start":12,"column_end":25},"name":"IntoFontsIter","qualname":"::IntoFontsIter","value":"IntoFontsIter {  }","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":14696,"byte_end":14705,"line_start":353,"line_end":353,"column_start":12,"column_end":21},"name":"v_metrics","qualname":"<Font>::v_metrics","value":"fn (&self, scale: Scale) -> VMetrics","parent":null,"children":[],"decl_id":null,"docs":" The \"vertical metrics\" for this font at a given scale. These metrics are shared by all of the glyphs\n in the font.\n See `VMetrics` for more detail.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":15012,"byte_end":15030,"line_start":361,"line_end":361,"column_start":12,"column_end":30},"name":"v_metrics_unscaled","qualname":"<Font>::v_metrics_unscaled","value":"fn (&self) -> VMetrics","parent":null,"children":[],"decl_id":null,"docs":" Get the unscaled VMetrics for this font, shared by all glyphs.\n See `VMetrics` for more detail.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":15173,"byte_end":15185,"line_start":366,"line_end":366,"column_start":12,"column_end":24},"name":"units_per_em","qualname":"<Font>::units_per_em","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the units per EM square of this font\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":15396,"byte_end":15407,"line_start":372,"line_end":372,"column_start":12,"column_end":23},"name":"glyph_count","qualname":"<Font>::glyph_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of glyphs present in this font. Glyph identifiers for this font will always be in the range\n `0..self.glyph_count()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":15850,"byte_end":15855,"line_start":381,"line_end":381,"column_start":12,"column_end":17},"name":"glyph","qualname":"<Font>::glyph","value":"fn <C> (&self, id: C) -> Option<Glyph<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding glyph for a Unicode code point or a glyph id for this font.\n If id corresponds to a glyph identifier, the identifier must be valid (smaller than `self.glyph_count()`),\n otherwise `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":16536,"byte_end":16546,"line_start":395,"line_end":395,"column_start":12,"column_end":22},"name":"glyphs_for","qualname":"<Font>::glyphs_for","value":"fn <I> (&self, itr: I) -> GlyphIter<I>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":16783,"byte_end":16800,"line_start":402,"line_end":402,"column_start":12,"column_end":29},"name":"font_name_strings","qualname":"<Font>::font_name_strings","value":"fn (&self) -> tt::FontNameIter<SharedBytes<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the names for this font.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":18907,"byte_end":18913,"line_start":444,"line_end":444,"column_start":12,"column_end":18},"name":"layout","qualname":"<Font>::layout","value":"fn <'b, 'c> (&'b self, s: &'c str, scale: Scale, start: Point<f32>) -> LayoutIter<'b, 'c>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for laying out glyphs for a string horizontally. It does not take control\n characters like line breaks into account, as treatment of these is likely to depend on the application.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":19319,"byte_end":19331,"line_start":455,"line_end":455,"column_start":12,"column_end":24},"name":"pair_kerning","qualname":"<Font>::pair_kerning","value":"fn <A, B> (&self, scale: Scale, first: A, second: B) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns additional kerning to apply as well as that given by HMetrics for a particular pair of glyphs.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":699},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":19786,"byte_end":19795,"line_start":465,"line_end":465,"column_start":12,"column_end":21},"name":"GlyphIter","qualname":"::GlyphIter","value":"GlyphIter {  }","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":708},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":20156,"byte_end":20166,"line_start":476,"line_end":476,"column_start":12,"column_end":22},"name":"LayoutIter","qualname":"::LayoutIter","value":"LayoutIter {  }","parent":null,"children":[{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":21290,"byte_end":21294,"line_start":506,"line_end":506,"column_start":12,"column_end":16},"name":"font","qualname":"<Glyph>::font","value":"fn (&self) -> Option<&Font<'a>>","parent":null,"children":[],"decl_id":null,"docs":" The font to which this glyph belongs. If the glyph is a standalone glyph that owns its resources,\n it no longer has a reference to the font which it was created from (using `standalone()`). In which\n case, `None` is returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":21518,"byte_end":21520,"line_start":513,"line_end":513,"column_start":12,"column_end":14},"name":"id","qualname":"<Glyph>::id","value":"fn (&self) -> GlyphId","parent":null,"children":[],"decl_id":null,"docs":" The glyph identifier for this glyph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":21836,"byte_end":21842,"line_start":521,"line_end":521,"column_start":12,"column_end":18},"name":"scaled","qualname":"<Glyph>::scaled","value":"fn (self, scale: Scale) -> ScaledGlyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" Augments this glyph with scaling information, making methods that depend on the scale of the glyph\n available.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":22838,"byte_end":22848,"line_start":544,"line_end":544,"column_start":12,"column_end":22},"name":"standalone","qualname":"<Glyph>::standalone","value":"fn (&self) -> Glyph<'static>","parent":null,"children":[],"decl_id":null,"docs":" Turns a `Glyph<'a>` into a `Glyph<'static>`. This produces a glyph that owns its resources,\n extracted from the font. This glyph can outlive the font that it comes from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":23944,"byte_end":23952,"line_start":567,"line_end":567,"column_start":12,"column_end":20},"name":"get_data","qualname":"<Glyph>::get_data","value":"fn (&self) -> Option<Arc<SharedGlyphData>>","parent":null,"children":[],"decl_id":null,"docs":" Get the data from this glyph (such as width, extents, vertices, etc.).\n Only possible if the glyph is a shared glyph.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":722},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":24249,"byte_end":24253,"line_start":577,"line_end":577,"column_start":5,"column_end":9},"name":"Line","qualname":"::Segment::Line","value":"Segment::Line(Line)","parent":{"krate":0,"index":721},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":725},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":24265,"byte_end":24270,"line_start":578,"line_end":578,"column_start":5,"column_end":10},"name":"Curve","qualname":"::Segment::Curve","value":"Segment::Curve(Curve)","parent":{"krate":0,"index":721},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":721},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":24235,"byte_end":24242,"line_start":576,"line_end":576,"column_start":10,"column_end":17},"name":"Segment","qualname":"::Segment","value":"Segment::{Line, Curve}","parent":null,"children":[{"krate":0,"index":722},{"krate":0,"index":725}],"decl_id":null,"docs":" Part of a `Contour`, either a `Line` or a `Curve`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":733},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":24373,"byte_end":24380,"line_start":582,"line_end":582,"column_start":12,"column_end":19},"name":"Contour","qualname":"::Contour","value":"Contour { segments }","parent":null,"children":[{"krate":0,"index":734}],"decl_id":null,"docs":" A closed loop consisting of a sequence of `Segment`s.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":734},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":24391,"byte_end":24399,"line_start":583,"line_end":583,"column_start":9,"column_end":17},"name":"segments","qualname":"::Contour::segments","value":"std::vec::Vec<Segment>","parent":{"krate":0,"index":733},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":24499,"byte_end":24501,"line_start":587,"line_end":587,"column_start":12,"column_end":14},"name":"id","qualname":"<ScaledGlyph>::id","value":"fn (&self) -> GlyphId","parent":null,"children":[],"decl_id":null,"docs":" The glyph identifier for this glyph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":24807,"byte_end":24811,"line_start":593,"line_end":593,"column_start":12,"column_end":16},"name":"font","qualname":"<ScaledGlyph>::font","value":"fn (&self) -> Option<&Font<'a>>","parent":null,"children":[],"decl_id":null,"docs":" The font to which this glyph belongs. If the glyph is a standalone glyph that owns its resources,\n it no longer has a reference to the font which it was created from (using `standalone()`). In which\n case, `None` is returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":24935,"byte_end":24948,"line_start":597,"line_end":597,"column_start":12,"column_end":25},"name":"into_unscaled","qualname":"<ScaledGlyph>::into_unscaled","value":"fn (self) -> Glyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" A reference to this glyph without the scaling\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":25046,"byte_end":25054,"line_start":601,"line_end":601,"column_start":12,"column_end":20},"name":"unscaled","qualname":"<ScaledGlyph>::unscaled","value":"fn (&self) -> &Glyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" Removes the scaling from this glyph\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":25244,"byte_end":25254,"line_start":606,"line_end":606,"column_start":12,"column_end":22},"name":"positioned","qualname":"<ScaledGlyph>::positioned","value":"fn (self, p: Point<f32>) -> PositionedGlyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" Augments this glyph with positioning information, making methods that depend on the position of the\n glyph available.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":26368,"byte_end":26373,"line_start":632,"line_end":632,"column_start":12,"column_end":17},"name":"scale","qualname":"<ScaledGlyph>::scale","value":"fn (&self) -> Scale","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":26522,"byte_end":26531,"line_start":636,"line_end":636,"column_start":12,"column_end":21},"name":"h_metrics","qualname":"<ScaledGlyph>::h_metrics","value":"fn (&self) -> HMetrics","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the \"horizontal metrics\" of this glyph. See `HMetrics` for more detail.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":29291,"byte_end":29296,"line_start":700,"line_end":700,"column_start":12,"column_end":17},"name":"shape","qualname":"<ScaledGlyph>::shape","value":"fn (&self) -> Option<Vec<Contour>>","parent":null,"children":[],"decl_id":null,"docs":" Produces a list of the contours that make up the shape of this glyph. Each contour consists of\n a sequence of segments. Each segment is either a straight `Line` or a `Curve`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":29600,"byte_end":29618,"line_start":705,"line_end":705,"column_start":12,"column_end":30},"name":"exact_bounding_box","qualname":"<ScaledGlyph>::exact_bounding_box","value":"fn (&self) -> Option<Rect<f32>>","parent":null,"children":[],"decl_id":null,"docs":" The bounding box of the shape of this glyph, not to be confused with `pixel_bounding_box`, the\n conservative pixel-boundary bounding box. The coordinates are relative to the glyph's origin.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":30447,"byte_end":30457,"line_start":721,"line_end":721,"column_start":12,"column_end":22},"name":"standalone","qualname":"<ScaledGlyph>::standalone","value":"fn (&self) -> ScaledGlyph<'static>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a glyph that owns its data from this glyph. This is similar to `Glyph::standalone`. See\n that function for more details.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":30724,"byte_end":30726,"line_start":732,"line_end":732,"column_start":12,"column_end":14},"name":"id","qualname":"<PositionedGlyph>::id","value":"fn (&self) -> GlyphId","parent":null,"children":[],"decl_id":null,"docs":" The glyph identifier for this glyph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":31033,"byte_end":31037,"line_start":738,"line_end":738,"column_start":12,"column_end":16},"name":"font","qualname":"<PositionedGlyph>::font","value":"fn (&self) -> Option<&Font<'a>>","parent":null,"children":[],"decl_id":null,"docs":" The font to which this glyph belongs. If the glyph is a standalone glyph that owns its resources,\n it no longer has a reference to the font which it was created from (using `standalone()`). In which\n case, `None` is returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":31162,"byte_end":31174,"line_start":742,"line_end":742,"column_start":12,"column_end":24},"name":"unpositioned","qualname":"<PositionedGlyph>::unpositioned","value":"fn (&self) -> &ScaledGlyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" A reference to this glyph without positioning\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":31286,"byte_end":31303,"line_start":746,"line_end":746,"column_start":12,"column_end":29},"name":"into_unpositioned","qualname":"<PositionedGlyph>::into_unpositioned","value":"fn (self) -> ScaledGlyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" Removes the positioning from this glyph\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":31556,"byte_end":31574,"line_start":751,"line_end":751,"column_start":12,"column_end":30},"name":"pixel_bounding_box","qualname":"<PositionedGlyph>::pixel_bounding_box","value":"fn (&self) -> Option<Rect<i32>>","parent":null,"children":[],"decl_id":null,"docs":" The conservative pixel-boundary bounding box for this glyph. This is the smallest rectangle\n aligned to pixel boundaries that encloses the shape of this glyph at this position.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":31736,"byte_end":31741,"line_start":755,"line_end":755,"column_start":12,"column_end":17},"name":"shape","qualname":"<PositionedGlyph>::shape","value":"fn (&self) -> Option<Vec<Contour>>","parent":null,"children":[],"decl_id":null,"docs":" Similar to `ScaledGlyph::shape()`, but with the position of the glyph taken into account.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":31841,"byte_end":31846,"line_start":758,"line_end":758,"column_start":12,"column_end":17},"name":"scale","qualname":"<PositionedGlyph>::scale","value":"fn (&self) -> Scale","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":31908,"byte_end":31916,"line_start":761,"line_end":761,"column_start":12,"column_end":20},"name":"position","qualname":"<PositionedGlyph>::position","value":"fn (&self) -> Point<f32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":32680,"byte_end":32684,"line_start":782,"line_end":782,"column_start":12,"column_end":16},"name":"draw","qualname":"<PositionedGlyph>::draw","value":"fn <O> (&self, o: O) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Rasterises this glyph. For each pixel in the rect given by `pixel_bounding_box()`, `o` is called:","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":34583,"byte_end":34593,"line_start":827,"line_end":827,"column_start":12,"column_end":22},"name":"standalone","qualname":"<PositionedGlyph>::standalone","value":"fn (&self) -> PositionedGlyph<'static>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a glyph that owns its data from this glyph. This is similar to `Glyph::standalone`. See\n that function for more details.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":36147,"byte_end":36152,"line_start":40,"line_end":40,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":36331,"byte_end":36337,"line_start":47,"line_end":47,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":36517,"byte_end":36523,"line_start":54,"line_end":54,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":36685,"byte_end":36691,"line_start":61,"line_end":61,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":37021,"byte_end":37027,"line_start":75,"line_end":75,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":37357,"byte_end":37363,"line_start":89,"line_end":89,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":37693,"byte_end":37699,"line_start":103,"line_end":103,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":38058,"byte_end":38063,"line_start":117,"line_end":117,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":38251,"byte_end":38256,"line_start":124,"line_end":124,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":38443,"byte_end":38449,"line_start":131,"line_end":131,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":39191,"byte_end":39195,"line_start":154,"line_end":154,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":39705,"byte_end":39709,"line_start":176,"line_end":176,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":40109,"byte_end":40114,"line_start":195,"line_end":195,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":41574,"byte_end":41579,"line_start":241,"line_end":241,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":42076,"byte_end":42080,"line_start":262,"line_end":262,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":42971,"byte_end":42992,"line_start":299,"line_end":299,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/rasterizer.rs","byte_start":44966,"byte_end":44979,"line_start":23,"line_end":23,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/rasterizer.rs","byte_start":46080,"byte_end":46084,"line_start":58,"line_end":58,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/rasterizer.rs","byte_start":46838,"byte_end":46852,"line_start":94,"line_end":94,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/rasterizer.rs","byte_start":49554,"byte_end":49559,"line_start":169,"line_end":169,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":6130,"byte_end":6141,"line_start":125,"line_end":125,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":6373,"byte_end":6384,"line_start":134,"line_end":134,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":6508,"byte_end":6519,"line_start":139,"line_end":139,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":6654,"byte_end":6665,"line_start":144,"line_end":144,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":6805,"byte_end":6816,"line_start":149,"line_end":149,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":9787,"byte_end":9795,"line_start":218,"line_end":218,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":10022,"byte_end":10030,"line_start":228,"line_end":228,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":11385,"byte_end":11390,"line_start":268,"line_end":268,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":11551,"byte_end":11560,"line_start":274,"line_end":274,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":11660,"byte_end":11678,"line_start":279,"line_end":279,"column_start":26,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":11803,"byte_end":11821,"line_start":284,"line_end":284,"column_start":24,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":11939,"byte_end":11957,"line_start":289,"line_end":289,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":12057,"byte_end":12071,"line_start":294,"line_end":294,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":189},{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":14269,"byte_end":14282,"line_start":339,"line_end":339,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":14503,"byte_end":14507,"line_start":348,"line_end":348,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":19927,"byte_end":19936,"line_start":469,"line_end":469,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":20352,"byte_end":20362,"line_start":484,"line_end":484,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":20940,"byte_end":20945,"line_start":499,"line_end":499,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":24425,"byte_end":24436,"line_start":585,"line_end":585,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":30646,"byte_end":30661,"line_start":730,"line_end":730,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":36147,"byte_end":36152,"line_start":40,"line_end":40,"column_start":42,"column_end":47},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":279},"to":{"krate":2,"index":1601}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":36331,"byte_end":36337,"line_start":47,"line_end":47,"column_start":42,"column_end":48},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":320},"to":{"krate":2,"index":1596}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":36517,"byte_end":36523,"line_start":54,"line_end":54,"column_start":42,"column_end":48},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":320},"to":{"krate":2,"index":1601}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":36685,"byte_end":36691,"line_start":61,"line_end":61,"column_start":24,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":320},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":37021,"byte_end":37027,"line_start":75,"line_end":75,"column_start":24,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":320},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":37357,"byte_end":37363,"line_start":89,"line_end":89,"column_start":24,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":320},"to":{"krate":2,"index":1611}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":37693,"byte_end":37699,"line_start":103,"line_end":103,"column_start":24,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":320},"to":{"krate":2,"index":1611}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":38058,"byte_end":38063,"line_start":117,"line_end":117,"column_start":53,"column_end":58},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":279},"to":{"krate":2,"index":1596}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":38251,"byte_end":38256,"line_start":124,"line_end":124,"column_start":53,"column_end":58},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":279},"to":{"krate":2,"index":1601}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":38443,"byte_end":38449,"line_start":131,"line_end":131,"column_start":52,"column_end":58},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":320},"to":{"krate":2,"index":1596}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":39191,"byte_end":39195,"line_start":154,"line_end":154,"column_start":36,"column_end":40},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":39705,"byte_end":39709,"line_start":176,"line_end":176,"column_start":27,"column_end":31},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":361},"to":{"krate":0,"index":64}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":40109,"byte_end":40114,"line_start":195,"line_end":195,"column_start":27,"column_end":32},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":380},"to":{"krate":0,"index":64}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":41364,"byte_end":41369,"line_start":233,"line_end":233,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":75}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":41574,"byte_end":41579,"line_start":241,"line_end":241,"column_start":14,"column_end":19},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":380},"to":{"krate":0,"index":75}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":42076,"byte_end":42080,"line_start":262,"line_end":262,"column_start":14,"column_end":18},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":361},"to":{"krate":0,"index":75}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/geometry.rs","byte_start":42971,"byte_end":42992,"line_start":299,"line_end":299,"column_start":6,"column_end":27},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/rasterizer.rs","byte_start":44575,"byte_end":44580,"line_start":5,"line_end":5,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":94}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/rasterizer.rs","byte_start":44966,"byte_end":44979,"line_start":23,"line_end":23,"column_start":19,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":460},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/rasterizer.rs","byte_start":46080,"byte_end":46084,"line_start":58,"line_end":58,"column_start":18,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":361},"to":{"krate":0,"index":94}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/rasterizer.rs","byte_start":46838,"byte_end":46852,"line_start":94,"line_end":94,"column_start":19,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":110},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/rasterizer.rs","byte_start":49554,"byte_end":49559,"line_start":169,"line_end":169,"column_start":18,"column_end":23},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":380},"to":{"krate":0,"index":94}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":6130,"byte_end":6141,"line_start":125,"line_end":125,"column_start":32,"column_end":43},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":490},"to":{"krate":2,"index":1704}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":6373,"byte_end":6384,"line_start":134,"line_end":134,"column_start":29,"column_end":40},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":490},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":6508,"byte_end":6519,"line_start":139,"line_end":139,"column_start":26,"column_end":37},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":490},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":6654,"byte_end":6665,"line_start":144,"line_end":144,"column_start":26,"column_end":37},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":490},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":6805,"byte_end":6816,"line_start":149,"line_end":149,"column_start":24,"column_end":35},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":490},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":9787,"byte_end":9795,"line_start":218,"line_end":218,"column_start":29,"column_end":37},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":634},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":10022,"byte_end":10030,"line_start":228,"line_end":228,"column_start":31,"column_end":39},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":634},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":11385,"byte_end":11390,"line_start":268,"line_end":268,"column_start":6,"column_end":11},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":677},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":11551,"byte_end":11560,"line_start":274,"line_end":274,"column_start":21,"column_end":30},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":504},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":11660,"byte_end":11678,"line_start":279,"line_end":279,"column_start":26,"column_end":44},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":530},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":11803,"byte_end":11821,"line_start":284,"line_end":284,"column_start":24,"column_end":42},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":530},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":11939,"byte_end":11957,"line_start":289,"line_end":289,"column_start":21,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":530},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":12057,"byte_end":12071,"line_start":294,"line_end":294,"column_start":10,"column_end":24},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":14269,"byte_end":14282,"line_start":339,"line_end":339,"column_start":23,"column_end":36},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":193},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":14503,"byte_end":14507,"line_start":348,"line_end":348,"column_start":10,"column_end":14},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":19927,"byte_end":19936,"line_start":469,"line_end":469,"column_start":36,"column_end":45},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":699},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":20352,"byte_end":20362,"line_start":484,"line_end":484,"column_start":27,"column_end":37},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":708},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":20940,"byte_end":20945,"line_start":499,"line_end":499,"column_start":10,"column_end":15},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":24425,"byte_end":24436,"line_start":585,"line_end":585,"column_start":10,"column_end":21},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":661},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/titus/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs","byte_start":30646,"byte_end":30661,"line_start":730,"line_end":730,"column_start":10,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":669},"to":{"krate":4294967295,"index":4294967295}}]}